# looking at total charges by Providence or not
graph2 <- df %>% group_by(moa_name, Providence) %>%
summarize(average_tot = mean(tot)) %>%
ggplot +
geom_col(mapping = aes(x = moa_name, y = average_tot, fill = Providence), position = 'dodge') +
labs(
title = "Average Total Charge By Month",
x = "month",
y = "average total charge",
caption = "In all months, the average total charge is higher for Hospitals in Providence than those not in Providence"
) + theme_economist()
ggsave(filename = 'graph2.png', plot = graph2)
graph2
#3
# looking at age vs LOS by gender
graph3 <- df %>% group_by(age, sex_name,los) %>%
summarize(average_LOS = mean(los)) %>%
ggplot(aes(x = age, y = average_LOS))+
geom_point() +
labs(
title = "Age vs Average LOS by Gender",
x = "Age",
y = "Average Length of Stay",
caption = "Length of stay does not appear to vary by age nor gender with the exception of newborns") +
facet_wrap(~sex_name)+
theme_economist()
ggsave(filename = 'graph3.png', plot = graph3)
graph3
# 4
#looking at age vs avg total charge by gender
graph4 <-df %>% group_by(age, sex_name) %>%
summarize(average_tot = mean(tot)) %>%
ggplot(aes(x = age, y = average_tot, color = sex_name))+
geom_point() +
labs(
title = "Age vs Average total charge by Gender",
x = "Age",
y = "Average total charge",
caption = "appears to have a dip aorund age 30 for both male and females, females tend to be slightly lower charges") +
theme_economist()
ggsave(filename = 'graph4.png', plot = graph4)
graph4
# 5 looking at total admissions by provider by gender
graph5 <- df %>% group_by(provider_name, sex_name) %>%
ggplot +
geom_bar(mapping = aes(x = provider_name, fill = sex_name), position = 'dodge') +
labs(
title = "Total Admissions by Provider by Gender",
x = "Provider",
y = "Admissions",
caption = "Rhode Island Hospital Has the Most Admissions"
) + theme_economist() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1, size = 8)
)
ggsave(filename = 'graph5.png', plot = graph5)
graph5
# 6
#looking at average total charge by provider by gender
graph6 <-df %>% group_by(provider_name, sex_name) %>%
summarize(average_total_charge = mean(tot)) %>%
ggplot +
geom_col(mapping = aes(x = provider_name, y = average_total_charge, fill = sex_name), position = "dodge") +
labs(
title = "average total charge by Provider by Gender",
x = "Provider",
y = "average total charge",
caption = "Bradley has highest average charge") + theme_economist() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1, size = 8)) +
scale_y_continuous(labels = scales::comma)
graph6
ggsave(filename = 'graph6.png', plot = graph6)
#7
#comparing average total charges of different ER modes by month
graph7 <- df %>%
group_by(er_mode, moa_name) %>%
summarize(average_total_charge = mean(tot)) %>%
ggplot() +
geom_point(mapping = aes(x = moa_name,
y = average_total_charge,
color = er_mode)) +
labs(
title = "average total charge ER Mode",
x = "Month",
y = "average total charge",
caption = "ER Modes 2 & 3 have highest average charges each month (helicopter & law enforcement agency)") + theme_economist() +
scale_y_continuous(labels = scales::comma)
graph7
ggsave(filename = 'graph7.png', plot = graph7)
#8
# comparing frequency of ER Modes by month
graph8 <- df %>%
filter(er_mode %in% c(2,3)) %>%
group_by(provider_name, er_mode) %>%
summarize(frequency = n(), .groups = "drop") %>%
ggplot(aes(x = provider_name, y = frequency, fill = er_mode)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Frequency of ER Modes 2 & 3 by Provider",
x = "provider",
y = "frequency",
fill = "ER mode",
caption = "only Lankmark & RI Hospital had helicopter ER modes in 2018") +
theme_economist() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1, size = 8)) +
scale_y_continuous(labels = scales::comma)
ggsave(filename = 'graph8.png', plot = graph8)
graph8
# 9
# patient frequency by state
graph9 <-df %>% filter(pt_state %in% c("RI", "MA", "CT", "NH", "ME", "VT")) %>%
group_by(pt_state, provider_name) %>%
summarize(frequency = n(), .groups = "drop") %>%
ggplot +
geom_col(mapping = aes(x = provider_name, y = frequency, fill = pt_state), position = "dodge") +
labs(
title = "Frequency of Patients from New England States",
x = "Provider",
y = "frequency",
caption = "Most Patients are from RI or MA") + theme_economist() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1, size = 8)) +
scale_y_continuous(labels = scales::comma)
ggsave(filename = 'graph9.png', plot = graph9)
#dist of patient birthweights
graph10<-df %>%
filter(b_wt != "000") %>%
ggplot(aes(x = as.numeric(b_wt))) +
geom_histogram(binwidth = 10, fill = "pink", color = "black") +
labs(
title = "Birth Weights Distribution",
x = "weight in grams at birth",
y = "Frequency",
caption = "birth weight has a normal distribution"
) +
theme_economist()
graph10
ggsave(filename = 'graph10.png', plot = graph10)
d1 <- df %>%
group_by(moa_name, sex_name) %>%
summarize(frequency = n(), .groups = "drop")
d2 <- d1 %>%
group_by(moa_name) %>%
mutate(rank = rank(-frequency))
a1 <- d2 %>%
ggplot(aes(x = rank, y = frequency, group = sex_name, fill = sex_name, label = sex_name)) +
geom_col() +
geom_text(aes(
y = frequency,
label = sex_name),
hjust = 1.4) +
coord_flip(clip = "off", expand = FALSE) +
scale_x_reverse() +
labs(title = 'Month {closest_state}',
x = '',
y = 'total admissions',
fill = 'Sex') +
theme(plot.title = element_text(hjust = 1, size = 22),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()) +
transition_states(moa_name) +
ease_aes("cubic-in-out")
animate(a1, nframes = 400)
anim_save("animatedgif.gif", a1)
median_tot = median(df$tot)
df$target <- case_when(
df$tot <= median_tot ~ 'low',
df$tot > median_tot ~ 'high'
)
# filter out rows were raceethn == '' or admtype == ''
df <- df %>% filter(
raceethn != "")
df <- df %>% filter(
admtype != ""
)
df_inputs <- df %>% select("age", "sex", "raceethn", "provider", "moa", "mod", "admtype", "campus", "los", "target")
# categorical = factor, numeric = numeric
df_inputs <- df_inputs %>%
mutate(target = as.factor(target),
age = as.numeric(age),
sex = as.factor(sex),
raceethn = as.factor(raceethn),
moa = as.factor(moa),
mod = as.factor(mod),
admtype = as.factor(admtype),
campus = as.factor(campus),
los = as.numeric(los))
# set training split
set.seed(2020)
invisible(splitIndex <- createDataPartition(df_inputs$target, p =0.1,
list = FALSE))
df_train <- df_inputs[splitIndex, ]
df_test <- df_inputs[-splitIndex, ]
dt <- rpart(target ~., data = df_train)
fancyRpartPlot(dt)
barplot(dt$variable.importance)
# k control is cross validation of 5 folds
trControl = trainControl(method = "cv",
number = 5)
# rpart with train control
dt2 <- train(target ~., data = df_train,
method = "rpart",
trControl = trControl)
# k nearest neighbors
knn <- train(target ~., data = df_train,
method = "knn",
trControl = trControl)
ranger <- train(target ~., data = df_train,
method = "ranger",
trControl = trControl)
plot(dt2)
plot(ranger)
plot(knn)
results <- resamples(list ('decision tree' = dt2,
'k nearest neighbors' = knn,
'ranger' = ranger
))
bwplot(results)
pred <- predict(ranger, df_test)
cm <- confusionMatrix(data = pred, reference = df_test$target, positive = "high")
cm$overall[1]
median_los = median(df$los)
df$target2 <- case_when(
df$los <= median_los ~ 'low',
df$los > median_los ~ 'high'
)
df_inputs2 <- df %>% select("age", "sex", "raceethn", "provider", "moa", "mod", "admtype", "campus", "tot", "target2", "season")
# categorical = factor, numeric = numeric
df_inputs2 <- df_inputs2 %>%
mutate(target2 = as.factor(target2),
age = as.numeric(age),
sex = as.factor(sex),
prover = as.factor(provider),
raceethn = as.factor(raceethn),
moa = as.factor(moa),
mod = as.factor(mod),
admtype = as.factor(admtype),
campus = as.factor(campus),
season = as.factor(season))
# set training split
set.seed(2020)
invisible(splitIndex2 <- createDataPartition(df_inputs2$target2, p =0.1,
list = FALSE))
df_train2 <- df_inputs2[splitIndex2, ]
df_test2 <- df_inputs2[-splitIndex2, ]
dt3 <- rpart(target2 ~., data = df_train2)
fancyRpartPlot(dt3)
barplot(dt3$variable.importance)
# k control is cross validation of 5 folds
trControl = trainControl(method = "cv",
number = 5)
# random forest
invisible(nnet <- train(target2 ~., data = df_train2,
method = "nnet",
trControl = trControl))
plot(dt4)
results <- resamples(list ('decision tree' = dt4,
'neural network' = nnet,
'ranger' = ranger))
plot(dt4)
plot(dt4)
dt3 <- rpart(target2 ~., data = df_train2)
fancyRpartPlot(dt3)
barplot(dt3$variable.importance)
# rpart with train control
dt4 <- train(target2 ~., data = df_train2,
method = "rpart",
trControl = trControl)
# random forest
invisible(nnet <- train(target2 ~., data = df_train2,
method = "nnet",
trControl = trControl))
# k nearest neighbors
ranger <- train(target2 ~., data = df_train2,
method = "ranger",
trControl = trControl)
plot(dt4)
plot(nnet)
plot(ranger)
pred2 <- predict(ranger, df_test2)
cm2 <- confusionMatrix(data = pred2, reference = df_test2$target2, positive = "high")
cm2$overall[1]
#7
#comparing average total charges of different ER modes by month
graph7 <- df %>%
group_by(er_mode, moa_name) %>%
summarize(average_total_charge = mean(tot)) %>%
ggplot() +
geom_point(mapping = aes(x = moa_name,
y = average_total_charge,
color = er_mode)) +
labs(
title = "average total charge ER Mode",
x = "Month",
y = "average total charge",
caption = "ER Modes 2 & 3 have highest average charges each month (helicopter & law enforcement agency)") + theme_economist() +
scale_y_continuous(labels = scales::comma)
graph7
ggsave(filename = 'graph7.png', plot = graph7)
#8
# comparing frequency of ER Modes by month
graph8 <- df %>%
filter(er_mode %in% c(2,3)) %>%
group_by(provider_name, er_mode) %>%
summarize(frequency = n(), .groups = "drop") %>%
ggplot(aes(x = provider_name, y = frequency, fill = er_mode)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Frequency of ER Modes 2 & 3 by Provider",
x = "provider",
y = "frequency",
fill = "ER mode",
caption = "only Lankmark & RI Hospital had helicopter ER modes in 2018") +
theme_economist() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1, size = 8)) +
scale_y_continuous(labels = scales::comma)
ggsave(filename = 'graph8.png', plot = graph8)
graph8
# 9
# patient frequency by state
graph9 <-df %>% filter(pt_state %in% c("RI", "MA", "CT", "NH", "ME", "VT")) %>%
group_by(pt_state, provider_name) %>%
summarize(frequency = n(), .groups = "drop") %>%
ggplot +
geom_col(mapping = aes(x = provider_name, y = frequency, fill = pt_state), position = "dodge") +
labs(
title = "Frequency of Patients from New England States",
x = "Provider",
y = "frequency",
caption = "Most Patients are from RI or MA") + theme_economist() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1, size = 8)) +
scale_y_continuous(labels = scales::comma)
ggsave(filename = 'graph9.png', plot = graph9)
# 9
# patient frequency by state
graph9 <-df %>% filter(pt_state %in% c("RI", "MA", "CT", "NH", "ME", "VT")) %>%
group_by(pt_state, provider_name) %>%
summarize(frequency = n(), .groups = "drop") %>%
ggplot +
geom_col(mapping = aes(x = provider_name, y = frequency, fill = pt_state), position = "dodge") +
labs(
title = "Frequency of Patients from New England States",
x = "Provider",
y = "frequency",
caption = "Most Patients are from RI or MA") + theme_economist() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1, size = 8)) +
scale_y_continuous(labels = scales::comma)
graph9
ggsave(filename = 'graph9.png', plot = graph9)
#7
#comparing average total charges of different ER modes by month
graph7 <- df %>%
group_by(er_mode, moa_name) %>%
summarize(average_total_charge = mean(tot)) %>%
ggplot() +
geom_point(mapping = aes(x = moa_name,
y = average_total_charge,
color = er_mode)) +
labs(
title = "average total charge ER Mode",
x = "Month",
y = "average total charge",
caption = "ER Modes 2 & 3 have highest average charges each month (helicopter & law enforcement agency)") + theme_economist() +
scale_y_continuous(labels = scales::comma)
graph7
ggsave(filename = 'graph7.png', plot = graph7)
#dist of patient birthweights
graph10<-df %>%
filter(b_wt != "000") %>%
ggplot(aes(x = as.numeric(b_wt))) +
geom_histogram(binwidth = 10, fill = "pink", color = "black") +
labs(
title = "Birth Weights Distribution",
x = "weight in grams at birth",
y = "Frequency",
caption = "birth weight has a normal distribution"
) +
theme_economist()
graph10
ggsave(filename = 'graph10.png', plot = graph10)
#dist of patient birthweights
graph10<-df %>%
filter(b_wt != "000") %>%
ggplot(aes(x = as.numeric(b_wt))) +
geom_histogram(binwidth = 10, fill = "pink", color = "black") +
labs(
title = "Birth Weights Distribution",
x = "weight in grams at birth",
y = "Frequency",
caption = "birth weight has a normal distribution"
) +
theme_economist()
graph10
ggsave(filename = 'graph10.png', plot = graph10)
View(df)
#dist of patient birthweights
graph10<-df %>%
filter(b_wt != "0") %>%
ggplot(aes(x = as.numeric(b_wt))) +
geom_histogram(binwidth = 10, fill = "pink", color = "black") +
labs(
title = "Birth Weights Distribution",
x = "weight in grams at birth",
y = "Frequency",
caption = "birth weight has a normal distribution"
) +
theme_economist()
graph10
ggsave(filename = 'graph10.png', plot = graph10)
#dist of patient birthweights
graph10<-df %>%
filter(b_wt != "0") %>%
ggplot(aes(x = as.numeric(b_wt))) +
geom_histogram(binwidth = 10, fill = "pink", color = "black") +
labs(
title = "Birth Weights Distribution",
x = "weight in grams at birth",
y = "Frequency",
caption = "birth weight has a normal distribution"
) +
theme_economist()
graph10
ggsave(filename = 'graph10.png', plot = graph10)
#dist of patient birthweights
graph10<-df %>%
filter(b_wt != "0") %>%
ggplot(aes(x = as.numeric(b_wt))) +
geom_histogram(binwidth = 10, fill = "pink", color = "black") +
labs(
title = "Birth Weights Distribution",
x = "weight in grams at birth",
y = "Frequency",
caption = "birth weight has a normal distribution"
) +
theme_economist()
graph10
ggsave(filename = 'graph10.png', plot = graph10)
#8
# comparing frequency of ER Modes by month
graph8 <- df %>%
filter(er_mode %in% c(2,3)) %>%
group_by(provider_name, er_mode) %>%
summarize(frequency = n(), .groups = "drop") %>%
ggplot(aes(x = provider_name, y = frequency, fill = er_mode)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Frequency of ER Modes 2 & 3 by Provider",
x = "provider",
y = "frequency",
fill = "ER mode",
caption = "only Lankmark & RI Hospital had helicopter ER modes in 2018") +
theme_economist() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1, size = 8)) +
scale_y_continuous(labels = scales::comma)
ggsave(filename = 'graph8.png', plot = graph8)
graph8
#8
# comparing frequency of ER Modes by month
data$er_mode <- as.factor(data$er_mode)
#8
# comparing frequency of ER Modes by month
df$er_mode <- as.factor(df$er_mode)
graph8 <- df %>%
filter(er_mode %in% c(2,3)) %>%
group_by(provider_name, er_mode) %>%
summarize(frequency = n(), .groups = "drop") %>%
ggplot(aes(x = provider_name, y = frequency, fill = er_mode)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Frequency of ER Modes 2 & 3 by Provider",
x = "provider",
y = "frequency",
fill = "ER mode",
caption = "only Lankmark & RI Hospital had helicopter ER modes in 2018") +
theme_economist() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1, size = 8)) +
scale_y_continuous(labels = scales::comma)
ggsave(filename = 'graph8.png', plot = graph8)
graph8
#7
#comparing average total charges of different ER modes by month
df$er_mode <- as.factor(df$er_mode)
graph7 <- df %>%
group_by(er_mode, moa_name) %>%
summarize(average_total_charge = mean(tot)) %>%
ggplot() +
geom_point(mapping = aes(x = moa_name,
y = average_total_charge,
color = er_mode)) +
labs(
title = "average total charge ER Mode",
x = "Month",
y = "average total charge",
caption = "ER Modes 2 & 3 have highest average charges each month (helicopter & law enforcement agency)") + theme_economist() +
scale_y_continuous(labels = scales::comma)
graph7
ggsave(filename = 'graph7.png', plot = graph7)
knitr::include_graphics("graph1.png")
knitr::include_graphics("graph2.png")
knitr::include_graphics("graph3.png")
knitr::include_graphics("graph4.png")
knitr::include_graphics("graph5.png")
knitr::include_graphics("graph6.png")
knitr::include_graphics("graph7.png")
knitr::include_graphics("graph8.png")
knitr::include_graphics("graph9.png")
knitr::include_graphics("graph10.png")
knitr::include_graphics("Animatedgif.gif")
knitr::include_graphics("results1.png")
