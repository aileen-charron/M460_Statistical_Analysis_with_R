names(df)[5] = "Death"
df_bydate <- df[, c('Date', 'Cases')]
max(df$Cases, na.rm)
max(df$Cases)
n_distinct(df$State)
df$Weekdays <- weekdays(df$Date)
df$Weekdays <- weekdays(df$Date)
df$Weekdays <- weekdays(df$Date)
class(df$date)
class(df$date)
df = data.frame(Rank = c(0,1,2,3),
Age = c(28, 34, 29, 42),
Name = c("Tom", "Jack", "Steve", "Ricky"))
df
df = read.csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv"
df = read.csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv"
library(dplyr)
df = data.frame(Rank = c(0,1,2,3),
Age = c(28, 34, 29, 42),
Name = c("Tom", "Jack", "Steve", "Ricky"))
df
df = read.csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv"
df = read.csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv"
df <- read.csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv"
df <- read.csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv"
df <- read.csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv")
names(df)
str(df)
sum(is.na(df))
colSums(is.na(df))
class(df$date)
df$date = as.Date(df$date)
class(df$date)
names(df)[1] = "Date"
names(df)[2] = "State"
names(df)[3] = "Flips"
names(df)[4] = "Cases"
names(df)[5] = "Death"
df_bydate <- df[, c('Date', 'Cases')]
max(df$Cases)
n_distinct(df$State)
df$Weekdays <- weekdays(df$Date)
df$Death2 <- ifelse(df$Death==0,
'no_death',
'has_death')
table(df$Death2)
prop.table(table(df$Death2))
summary(df$Death)
library(dplyr)
df$Death3 = case_when(df$Death < 1171 ~ 'low_death',
df$Death < 14912 ~ 'mid_death',
TRUE ~ 'high_death')
df_RI_2021 <- df[(df$State == 'Rhode Island')&(df$Date >= '2021-01-01') & (df$Date <= '2021-12-31'),]
mean(df_RI_2021$Cases)
df_RI_2021_weekday <- df_RI_2021[df_RI_2021$Weekdays == '']
df <- read.csv('https://bryantstats.github.io/math421/data/titanic.csv')
head(df)
str(df)
names(df)
mean(df)
names(df$fare)
mean(df$fare)
mean(df$Fare)
min(df$fare)
min(df$Fare)
---
output: # rmarkdown::github_document
html_document:
pdf_document: default
max(df$Fare)
table(df$Pclass)
sum(is.na(df))
colSums(is.na(df))
class(df$Pclass)
cor(df$Pclass, df$Survived)
by(df$Age, df$Sex, mean)
by(df$Fare, df$Sex, mean)
df$Pclass2<- if else( df$Pclass ==1, 'First_Class',if else (df$Pclass ==2, 'Second_Class', 'Third_Class')
df$Pclass2<- if else(df$Pclass ==1, 'First_Class',if else (df$Pclass ==2, 'Second_Class', 'Third_Class'))
df$Pclass2<- ifelse(df$Pclass ==1, 'First_Class',ifelse  (df$Pclass ==2, 'Second_Class', 'Third_Class'))
View(df)
df$Pclass3 <- case_when(df$Pclass2 == 'First_Class' ~ "First class", df$Pclass2 == 'Second_Class' ~ 'Second Class', TRUE ~ 'Third Class')
summary(df$Fare)
df$Fare2 <- case_when(df$Fare < 8 ~ 'low_fare',
df$Fare < 31 ~ 'medium_fare',
TRUE ~ 'high_fare')
s3 = rep(1, 100)
s4 = seq(1,100)
s5 = seq(2,101)
s6 <- s3 / (s4*s5)
s7 <- sum(s6)
s3 = rep(1, 100)
s4 = seq(1,100)
s5 = seq(2,101)
s6 <- s3 / (s4*s5)
s7 <- sum(s6)
s7
s8 = rep(1,100)
s9 = seq(1,100)
s10 = seq(2,101)
s11 = seq(3,102)
s12 <- s8 / (s9*s10*s11)
s13 <- sum(s12)
s12
s8 = rep(1,100)
s9 = seq(1,100)
s10 = seq(2,101)
s11 = seq(3,102)
s12 <- s8 / (s9*s10*s11)
s13 <- sum(s12)
s13
s8 = seq(1, 100, 2)
sum(s8^s8)
library(dplyr)
df = data.frame(Rank = c(0,1,2,3),
Age = c(28, 34, 29, 42),
Name = c("Tom", "Jack", "Steve", "Ricky"))
df
df <- read.csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv")
names(df)
str(df)
sum(is.na(df))
colSums(is.na(df))
class(df$date)
df$date = as.Date(df$date)
class(df$date)
names(df)[1] = "Date"
names(df)[2] = "State"
names(df)[3] = "Flips"
names(df)[4] = "Cases"
names(df)[5] = "Death"
df_bydate <- df[, c('Date', 'Cases')]
max(df$Cases)
n_distinct(df$State)
df$Weekdays <- weekdays(df$Date)
df$Death2 <- ifelse(df$Death==0,
'no_death',
'has_death')
table(df$Death2)
prop.table(table(df$Death2))
summary(df$Death)
library(dplyr)
df$Death3 = case_when(df$Death < 1171 ~ 'low_death',
df$Death < 14912 ~ 'mid_death',
TRUE ~ 'high_death')
df_RI_2021 <- df[(df$State == 'Rhode Island')&(df$Date >= '2021-01-01') & (df$Date <= '2021-12-31'),]
mean(df_RI_2021$Cases)
df_RI_2021_weekday <- df_RI_2021[df_RI_2021$Weekdays == '']
df <- read.csv('https://bryantstats.github.io/math421/data/titanic.csv')
head(df)
str(df)
names(df)
mean(df$Fare)
min(df$Fare)
max(df$Fare)
table(df$Pclass)
sum(is.na(df))
colSums(is.na(df))
class(df$Pclass)
cor(df$Pclass, df$Survived)
by(df$Fare, df$Sex, mean)
df$Pclass2<- ifelse(df$Pclass ==1, 'First_Class',ifelse  (df$Pclass ==2, 'Second_Class', 'Third_Class'))
df$Pclass3 <- case_when(df$Pclass2 == 'First_Class' ~ "First class", df$Pclass2 == 'Second_Class' ~ 'Second Class', TRUE ~ 'Third Class')
summary(df$Fare)
df$Fare2 <- case_when(df$Fare < 8 ~ 'low_fare',
df$Fare < 31 ~ 'medium_fare',
TRUE ~ 'high_fare')
library(dplyr)
df = data.frame(Rank = c(0,1,2,3),
Age = c(28, 34, 29, 42),
Name = c("Tom", "Jack", "Steve", "Ricky"))
df
df <- read.csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv")
names(df)
str(df)
sum(is.na(df))
colSums(is.na(df))
class(df$date)
df$date = as.Date(df$date)
class(df$date)
names(df)[1] = "Date"
names(df)[2] = "State"
names(df)[3] = "Flips"
names(df)[4] = "Cases"
names(df)[5] = "Death"
df_bydate <- df[, c('Date', 'Cases')]
max(df$Cases)
n_distinct(df$State)
df$Weekdays <- weekdays(df$Date)
df$Death2 <- ifelse(df$Death==0,
'no_death',
'has_death')
table(df$Death2)
prop.table(table(df$Death2))
summary(df$Death)
library(dplyr)
df$Death3 = case_when(df$Death < 1171 ~ 'low_death',
df$Death < 14912 ~ 'mid_death',
TRUE ~ 'high_death')
df_RI_2021 <- df[(df$State == 'Rhode Island')&(df$Date >= '2021-01-01') & (df$Date <= '2021-12-31'),]
mean(df_RI_2021$Cases)
df_RI_Aug_2021 <- df[(df$)]
View(df)
df_RI_Aug_2021 <- df[(df$State == 'Rhode Island')&(df$Date >= '2021-08-01') & (df$Date <= '2021-08-31'),]
df_RI_Aug_2021 <- df[(df$State == 'Rhode Island')&(df$Date >= '2021-08-01') & (df$Date <= '2021-08-31')& (df$Weekdays == 'Monday')& (df$Weekdays == 'Tuesday')& (df$Weekdays == 'Wednesday')& (df$Weekdays == 'Thursday')& (df$Weekdays == 'Friday'),]
median(df_RI_Aug_2021)
df_RI_Aug_2021 <- df[(df$State == 'Rhode Island')&(df$Date >= '2021-08-01') & (df$Date <= '2021-08-31')& (df$Weekdays == 'Monday')& (df$Weekdays == 'Tuesday')& (df$Weekdays == 'Wednesday')& (df$Weekdays == 'Thursday')& (df$Weekdays == 'Friday'),]
View(df_RI_Aug_2021)
View(df)
df_RI_Aug_2021 <- df[(df$State == 'Rhode Island')&(df$Date >= '2021-08-01') & (df$Date <= '2021-08-31')& (df$Weekdays == 'Monday')& (df$Weekdays == 'Tuesday')& (df$Weekdays == 'Wednesday')& (df$Weekdays == 'Thursday')& (df$Weekdays == 'Friday'),]
library(dplyr)
df = data.frame(Rank = c(0,1,2,3),
Age = c(28, 34, 29, 42),
Name = c("Tom", "Jack", "Steve", "Ricky"))
df
df <- read.csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv")
names(df)
names(df)
library(dplyr)
df = data.frame(Rank = c(0,1,2,3),
Age = c(28, 34, 29, 42),
Name = c("Tom", "Jack", "Steve", "Ricky"))
df
df <- read.csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv")
names(df)
str(df)
sum(is.na(df))
colSums(is.na(df))
class(df$date)
library(dplyr)
df = data.frame(Rank = c(0,1,2,3),
Age = c(28, 34, 29, 42),
Name = c("Tom", "Jack", "Steve", "Ricky"))
df
df <- read.csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv")
names(df)
str(df)
sum(is.na(df))
colSums(is.na(df))
class(df$date)
df$date = as.Date(df$date)
names(df)[1] = "Date"
names(df)[2] = "State"
names(df)[3] = "Flips"
names(df)[4] = "Cases"
names(df)[5] = "Death"
sum(is.na(df))
colSums(is.na(df))
class(df$date)
df$date = as.Date(df$date)
class(df$date)
df$date = as.Date(df$date)
library(dplyr)
df = data.frame(Rank = c(0,1,2,3),
Age = c(28, 34, 29, 42),
Name = c("Tom", "Jack", "Steve", "Ricky"))
df
df <- read.csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv")
names(df)
str(df)
sum(is.na(df))
colSums(is.na(df))
class(df$date)
df$date = as.Date(df$date)
class(df$date)
names(df)[1] = "Date"
names(df)[2] = "State"
names(df)[3] = "Flips"
names(df)[4] = "Cases"
names(df)[5] = "Death"
df_bydate <- df[, c('Date', 'Cases')]
max(df$Cases)
n_distinct(df$State)
df$Weekdays <- weekdays(df$Date)
df$Death2 <- ifelse(df$Death==0,
'no_death',
'has_death')
table(df$Death2)
prop.table(table(df$Death2))
summary(df$Death)
library(dplyr)
df$Death3 = case_when(df$Death < 1171 ~ 'low_death',
df$Death < 14912 ~ 'mid_death',
TRUE ~ 'high_death')
df_RI_2021 <- df[(df$State == 'Rhode Island')&(df$Date >= '2021-01-01') & (df$Date <= '2021-12-31'),]
mean(df_RI_2021$Cases)
df_RI_Aug_2021 <- df[(df$State == 'Rhode Island')&(df$Date >= '2021-08-01') & (df$Date <= '2021-08-31')& (df$Weekdays == 'Monday')& (df$Weekdays == 'Tuesday')& (df$Weekdays == 'Wednesday')& (df$Weekdays == 'Thursday')& (df$Weekdays == 'Friday'),]
median(df_RI_Aug_2021$Cases)
df_RI_2021_weekdays <- df_RI_2021[(df_RI_2021$Weekdays=='Monday')&(df_RI_2021$Weekdays=='Tuesday')&(df_RI_2021$Weekdays=='Wednesday')&(df_RI_2021$Weekdays=='Thursday')&(df_RI_2021$Weekdays=='Friday'),]
View(df_RI_2021_weekdays)
View(df_RI_Aug_2021)
View(df_RI_Aug_2021)
View(df)
average_cases <- df %>%
filter(State == "Rhode Island", Year == "2021") %>%
```
average_cases <- df %>%
filter(State == "Rhode Island", format(Date, "%Y") == "2021") %>%
summarize(average_cases = mean(Cases, na.rm = TRUE))
print(average_cases)
ibrary(dplyr)
ibrary(dplyr)
library(dplyr)
# Ensure the 'Date' column is in Date format
df$Date <- as.Date(df$Date)
# Calculate the average cases for Rhode Island in 2021
average_cases <- df %>%
filter(State == "Rhode Island", format(Date, "%Y") == "2021") %>%
summarize(average_cases = mean(Cases, na.rm = TRUE))
print(average_cases)
average_cases <- df %>%
filter(State == "Rhode Island", format(Date, "%Y") == "2021") %>%
summarize(average_cases = mean(Cases, na.rm = TRUE))
print(average_cases)
df$Date <- as.Date(df$Date)
median_cases_weekdays <- df %>%
filter(State == "Rhode Island", format(Date, "%Y") == "2021") %>%
group_by(Weekdays) %>%
summarize(median_cases = median(Cases, na.rm = TRUE))
print(median_cases_weekdays)
median_cases_months <- df %>%
filter(State == "Rhode Island", format(Date, "%Y") == "2021",
format(Date, "%m") %in% c("06", "07", "08", "09")) %>%
mutate(Month = format(Date, "%B")) %>%
group_by(Month) %>%
summarize(median_cases = median(Cases, na.rm = TRUE))
print(median_cases_months)
df <- read.csv('https://bryantstats.github.io/math421/data/titanic.csv')
head(df)
str(df)
names(df)
mean(df$Fare)
min(df$Fare)
max(df$Fare)
table(df$Pclass)
sum(is.na(df))
colSums(is.na(df))
class(df$Pclass)
cor(df$Pclass, df$Survived)
by(df$Fare, df$Sex, mean)
df$Pclass2<- ifelse(df$Pclass ==1, 'First_Class',ifelse  (df$Pclass ==2, 'Second_Class', 'Third_Class'))
df$Pclass3 <- case_when(df$Pclass2 == 'First_Class' ~ "First class", df$Pclass2 == 'Second_Class' ~ 'Second Class', TRUE ~ 'Third Class')
summary(df$Fare)
df$Fare2 <- case_when(df$Fare < 8 ~ 'low_fare',
df$Fare < 31 ~ 'medium_fare',
TRUE ~ 'high_fare')
View(df)
df$Simplified_Class <- ifelse(df$Pclass == 1 | df$Pclass == 2,
"Upper Class",
"Lower Class")
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
knitr::opts_chunk$set(message = FALSE)
df <- read_csv('https://covidtracking.com/data/download/all-states-history.csv')
library(lubridate)
df$month = month(df$date)
# day of the week
df$weekday = wday(df$date)
# day of the month
df$monthday <- mday(df$date)
View(df)
df$daily_death <- case_when(
df$deathIncrease <3 ~ 'low',
df$deathIncrease <=14 ~ 'medium',
TRUE ~ 'high'
)
df$month2 <- case_when(
df$month <=10 ~ 'early_month',
df$month <=20 ~ 'mid_month',
TRUE~'end_month'
)
?weekday
??weekday
?wday
df$weekend <- case_when(
df$weekday = 6 ~ '1',
df$weekend <- case_when(
df$weekday = 6 ~ '1',
df$weekend <- case_when(
df$weekday == 6 ~ '1',
df$weekday == 7 ~ '1',
TRUE ~ '0'
)
df %>%  select(-totalTestsViral)
View(df)
x <- c(1:10)
# square root of x
sqrt(x)
sum(sqrt(x))
log(sum(sqrt(x)))
# log base 2 of 16
log(16, 2)
x %>%
sqrt %>%
sum %>%
log %>%
x <- c(1:10)
x %>%
sqrt %>%
sum %>%
log %>%
x <- c(1:10)
x %>%
sqrt %>%
sum %>%
log %>%
x <- c(1:10)
x %>% sum %>% log
x <- c(1:10)
x %>% sqrt %>% sum %>% log
x <- c(1:10)
x %>% sqrt %>% sum %>% log
x <- c(1:10)
x %>% sqrt %>% sum %>% log
df %>%
group_by(weekday) %>%
summarise(mean(positiveIncrease))
df %>%
group_by(month) %>%
summarise(median(positiveIncrease))
df %>% group_by(month2) %>%
summarise(mean(positiveIncrease))
df$month2 <- case_when(
df$month <=10 ~ 'early_month',
df$month <=20 ~ 'mid_month',
TRUE~'end_month'
)
df$month2 <- case_when(
df$month <=10 ~ 'early_month',
df$month <=20 ~ 'mid_month',
df$month >20 ~ 'end_month',
TRUE~'end_month'
)
df$weekend <- case_when(
df$weekday == 6 ~ '1',
df$weekday == 7 ~ '1',
TRUE ~ '0'
)
df %>%  select(-totalTestsViral)
df %>%
group_by(weekday) %>%
summarise(mean(positiveIncrease))
df %>%
group_by(month) %>%
summarise(median(positiveIncrease))
df %>% group_by(month2) %>%
summarise(mean(positiveIncrease))
df %>% group_by(weekend) %>%
summarise(median(positiveIncrease))
df %>%
filter(year == 2020),
df %>%
filter(year == 2020) %>%
filter(month == 10 | month ==11) %>%
group_by(weekend) %>%
summarise(positive_increase = median(positiveIncrease))
df$year <- year(df$date)
df %>%
filter(year == 2020) %>%
filter(month == 10 | month ==11) %>%
group_by(weekend) %>%
summarise(positive_increase = median(positiveIncrease))
df %>%
filter(year == 2020)
filter(month == 9, month == 10, month ==11) %>%
group_by(month2) %>%
summarise(positive_increase = mean(positiveIncrease))
df %>%
filter(year == 2020)
filter(month == 9| month == 10| month ==11) %>%
group_by(month2) %>%
summarise(positive_increase = mean(positiveIncrease))
df %>%
filter(year == 2020) %>%
filter(month == 9| month == 10| month ==11) %>%
group_by(month2) %>%
summarise(positive_increase = mean(positiveIncrease))
df %>%
filter(year == 2020) %>%
filter(month == 6 | month ==7| month ==8) %>%
group_by(weekend)
df %>%
filter(year == 2020) %>%
filter(month == 6 | month ==7| month ==8) %>%
group_by(weekend) %>%
summarise(hospitalizations = mean(hospitalizations))
df %>%
filter(year == 2020) %>%
filter(month == 6 | month ==7| month ==8) %>%
group_by(weekend) %>%
summarise(hospitalizations = mean(hospitalizedIncrease))
df <- read_csv('../data/titanic.csv')
df %>%
filter(year == 2020) %>%
filter(month == 6 | month ==7| month ==8) %>%
group_by(weekend) %>%
summarise(hospitalizations = mean(hospitalizedIncrease))
df %>%
filter(year == 2020) %>%
filter(month == 6 | month ==7| month ==8) %>%
group_by(weekend) %>%
summarise(hospitalizations = mean(hospitalizedIncrease))
df %>%
filter(year == 2020) %>%
filter(month == 6 | month ==7| month ==8) %>%
group_by(weekend) %>%
summarise(hospitalizations = mean(hospitalizedIncrease))
df %>%
filter(year == 2020) %>%
filter(month == 6 | month ==7| month ==8) %>%
group_by(weekend) %>%
summarise(hospitalizations = mean(hospitalizedIncrease))
