library(readxl)
read_excel('C:\Users\student\Documents\M461-Statistical-Analysis-with-R')
read_excel('C:\\Users\\student\\Documents\\M461-Statistical-Analysis-with-R')
read_excel('"C:\Users\student\Documents\M461-Statistical-Analysis-with-R\c2015.xlsx"')
read_excel('"C:\\Users\\student\\Documents\\M461-Statistical-Analysis-with-R\\c2015.xlsx"')
read_excel('"C:\\Users\\student\\Documents\\M461-Statistical-Analysis-with-R\\c2015.xlsx"')
read_excel("C:\\Users\\student\\Documents\\M461-Statistical-Analysis-with-R\\c2015.xlsx")
df <- read_excel("C:\\Users\\student\\Documents\\M461-Statistical-Analysis-with-R\\c2015.xlsx")
library(readxl)
library(tidyverse)
colSums(is.na(df["Sex"]))
View(df)
colSums(is.na(df["SEX"]))
colMeans(is.na(df["SEX"]))
table(df$SEX, useNA = "ifany")
df$SEX <- replace(df$SEX, df$SEX == 'Unknown', NA)
majority_SEX <- names(which.max(table(df$SEX)))
df$SEX <- replace_na(df$SEX, majority_SEX)
table(df$SEX, useNA = "ifany")
colSums(is.na(df["AGE"]))
colMeans(is.na(df["SEX"]))
colMeans(is.na(df["SEX"]))
colMeans(is.na(df["AGE"]))
table(df$AGE, useNA = "ifany")
df$AGE <- replace(df$AGE, df$AGE == 'Unknown', NA)
df['AGE'] = df['AGE'].str.replace('Less than 1', '0')
df$AGE = df$AGE.str.replace('Less than 1', '0')
install.packages('stringr')
knitr::opts_chunk$set(message = FALSE)
library(stringr)
df$AGE <- str_replace(df$AGE, "Less than 1", "0")
table(df$AGE, useNA = "ifany")
class(df$AGE)
df$AGE <- as.numeric(df$AGE)
mean_AGE <- mean(df$AGE, na.rm = TRUE)
df$AGE <- replace_na(df$AGE, mean_AGE)
mean_AGE <- mean(df$AGE, na.rm = TRUE)
df$AGE <- replace_na(df$AGE, mean_AGE)
library(readxl)
library(tidyverse)
mean_AGE <- mean(df$AGE, na.rm = TRUE)
df$AGE <- replace_na(df$AGE, mean_AGE)
table(df$TRAV_SP, useNA = "ifany")
df$TRAV_SP <- str_remove(df$TRAV_SP, "MPH")
View(df)
library(dplyr)
df <- df %>% filter(TRAV_SP = "Greater")
library(dplyr)
df <- df %>% filter(TRAV_SP = ! "Greater")
library(dplyr)
df <- df %>% filter(TRAV_SP == "Greater")
View(df)
knitr::opts_chunk$set(message = FALSE)
library(readxl)
library(tidyverse)
df <- read_excel("C:\\Users\\student\\Documents\\M461-Statistical-Analysis-with-R\\c2015.xlsx")
colSums(is.na(df["SEX"]))
colMeans(is.na(df["SEX"]))
table(df$SEX, useNA = "ifany")
df$SEX <- replace(df$SEX, df$SEX == 'Unknown', NA)
majority_SEX <- names(which.max(table(df$SEX)))
df$SEX <- replace_na(df$SEX, majority_SEX)
table(df$SEX, useNA = "ifany")
colSums(is.na(df["AGE"]))
colMeans(is.na(df["AGE"]))
table(df$AGE, useNA = "ifany")
df$AGE <- replace(df$AGE, df$AGE == 'Unknown', NA)
library(stringr)
df$AGE <- str_replace(df$AGE, "Less than 1", "0")
table(df$AGE, useNA = "ifany")
class(df$AGE)
df$AGE <- as.numeric(df$AGE)
mean_AGE <- mean(df$AGE, na.rm = TRUE)
df$AGE <- replace_na(df$AGE, mean_AGE)
table(df$TRAV_SP, useNA = "ifany")
df$TRAV_SP <- str_remove(df$TRAV_SP, "MPH")
df$TRAV_SP <- str_replace(df$TRAV_SP, "Stopped", "0")
knitr::opts_chunk$set(message = FALSE)
library(readxl)
library(tidyverse)
df <- read_excel("C:\\Users\\student\\Documents\\M461-Statistical-Analysis-with-R\\c2015.xlsx")
colSums(is.na(df["SEX"]))
colMeans(is.na(df["SEX"]))
table(df$SEX, useNA = "ifany")
df$SEX <- replace(df$SEX, df$SEX == 'Unknown', NA)
table(df$SEX, useNA = "ifany")
colMeans(is.na(df["SEX"]))
table(df$SEX, useNA = "ifany")
df$SEX <- replace(df$SEX, df$SEX == 'Unknown', NA)
majority_SEX <- names(which.max(table(df$SEX)))
df$SEX <- replace_na(df$SEX, majority_SEX)
table(df$SEX, useNA = "ifany")
colSums(is.na(df["AGE"]))
colMeans(is.na(df["AGE"]))
table(df$AGE, useNA = "ifany")
df$AGE <- replace(df$AGE, df$AGE == 'Unknown', NA)
knitr::opts_chunk$set(message = FALSE)
library(readxl)
library(tidyverse)
df <- read_excel("C:\\Users\\student\\Documents\\M461-Statistical-Analysis-with-R\\c2015.xlsx")
colSums(is.na(df["SEX"]))
colMeans(is.na(df["SEX"]))
table(df$SEX, useNA = "ifany")
df$SEX <- replace(df$SEX, df$SEX == 'Unknown', NA)
majority_SEX <- names(which.max(table(df$SEX)))
df$SEX <- replace_na(df$SEX, majority_SEX)
table(df$SEX, useNA = "ifany")
colSums(is.na(df["AGE"]))
colMeans(is.na(df["AGE"]))
table(df$AGE, useNA = "ifany")
df$AGE <- replace(df$AGE, df$AGE == 'Unknown', NA)
library(stringr)
df$AGE <- str_replace(df$AGE, "Less than 1", "0")
table(df$AGE, useNA = "ifany")
df$AGE <- replace(df$AGE, df$AGE == 'Unknown', NA)
knitr::opts_chunk$set(message = FALSE)
library(readxl)
library(tidyverse)
df <- read_excel("C:\\Users\\student\\Documents\\M461-Statistical-Analysis-with-R\\c2015.xlsx")
colSums(is.na(df["SEX"]))
colMeans(is.na(df["SEX"]))
table(df$SEX, useNA = "ifany")
df$SEX <- replace(df$SEX, df$SEX == 'Unknown', NA)
majority_SEX <- names(which.max(table(df$SEX)))
df$SEX <- replace_na(df$SEX, majority_SEX)
table(df$SEX, useNA = "ifany")
colSums(is.na(df["AGE"]))
colMeans(is.na(df["AGE"]))
table(df$AGE, useNA = "ifany")
df$AGE <- replace(df$AGE, df$AGE == 'Unknown', NA)
library(stringr)
df$AGE <- str_replace(df$AGE, "Less than 1", "0")
table(df$AGE, useNA = "ifany")
class(df$AGE)
df$AGE <- as.numeric(df$AGE)
mean_AGE <- mean(df$AGE, na.rm = TRUE)
df$AGE <- replace_na(df$AGE, mean_AGE)
table(df$TRAV_SP, useNA = "ifany")
df$TRAV_SP <- str_remove(df$TRAV_SP, "MPH")
df <- df[df$TRAV_SP ! = "Greater",]
df <- df[df$TRAV_SP != "Greater",]
df$TRAV_SP <- str_replace(df$TRAV_SP, "Stopped", "0")
df$TRAV_SP <- na_if(df$TRAV_SP, "Not Rep")
df$TRAV_SP <- na_if(df$TRAV_SP, "Unknown")
class(df$TRAV_SP)
df$TRAV_SP <- as.numeric(df$TRAV_SP)
library(tidyr)
median_trav_sp <- median(df$TRAV_SP, na.rm = TRUE)
df$TRAV_SP <- replace_na(df$TRAV_SP, median_trav_sp)
correlation <- df %>%
filter(SEAT_POS == 1) %>%
summarize(correlation = cor(Age, TRAV_SP, use = "complete.obs")) %>%
pull(correlation)
correlation <- df %>%
filter(SEAT_POS == 1) %>%
summarize(correlation = cor(AGE, TRAV_SP, use = "complete.obs")) %>%
pull(correlation)
View(df)
correlation <- df %>%
filter(SEAT_POS == 1) %>%
na.omit() %>%
summarize(correlation = cor(AGE, TRAV_SP) %>%
pull(correlation)
correlation
correlation <- df %>%
filter(SEAT_POS == 1) %>%
na.omit() %>%
summarize(correlation = cor(AGE, TRAV_SP) %>%
pull(correlation)
correlation
correlation <- df %>%
filter(SEAT_POS == 1) %>%
na.omit() %>%
summarize(correlation = cor(AGE, TRAV_SP)
pull(correlation)
correlation <- df %>%
filter(SEAT_POS == 1) %>%
na.omit() %>%
summarize(correlation = cor(AGE, TRAV_SP)
pull(correlation)
correlation <- df %>%
filter(SEAT_POS == 1) %>%
na.omit() %>%
summarize(correlation = cor(AGE, TRAV_SP)
correlation
library(dplyr)
# Remove rows with any NA values and calculate the correlation
correlation <- df %>%
filter(SEAT_POS == 1) %>%  # Filter for drivers (assuming SEAT_POS == 1 represents the driver)
na.omit() %>%              # Remove rows with any NA values
summarize(correlation = cor(AGE, TRAV_SP, use = "complete.obs")) %>%  # Calculate correlation
pull(correlation)          # Extract the result
df %>%
na.omit() %>%
filter(SEAT_POS == 1) %>%
summarize(correlation = cor(AGE, TRAV_SP)
Age_trav_sp_cor <-df %>%
na.omit() %>%
filter(SEAT_POS == 1) %>%
summarize(correlation = cor(AGE, TRAV_SP)
Age_trav_sp_cor <-df %>%
na.omit() %>%
filter(SEAT_POS == 1) %>%
summarize(correlation = cor(AGE, TRAV_SP)
Age_trav_sp_cor <- df %>%
na.omit() %>%
filter(SEAT_POS == 1) %>%
summarize(correlation = cor(AGE, TRAV_SP)
Age_trav_sp_cor <- df %>%
filter(SEAT_POS ==1) %>%
select(AGE, TRAV_SP) %>%
na,omit() %>%
Age_trav_sp_cor <- df %>%
filter(SEAT_POS ==1) %>%
select(AGE, TRAV_SP) %>%
na.omit() %>%
cor()
print(Age_trav_sp_cor)
Age_trav_sp_cor <- df %>%
filter(SEAT_POS ==1) %>%
select(AGE, TRAV_SP) %>%
na.omit()
print(Age_trav_sp_cor)
Age_trav_sp_cor <- df %>%
filter(SEAT_POS == "Front Seat, Left Side") %>%
select(AGE, TRAV_SP) %>%
na.omit()
print(Age_trav_sp_cor)
Age_trav_sp_cor <- df %>%
filter(SEAT_POS == "Front Seat, Left Side") %>%
select(AGE, TRAV_SP) %>%
na.omit() %>%
cor()
print(Age_trav_sp_cor)
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
library(ggplot2)
df <- read_csv("C:\\Users\\student\\Documents\\M461-Statistical-Analysis-with-R\\Salary_data.csv")
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
library(ggplot2)
df <- read_csv("C:\\Users\\student\\Documents\\M461-Statistical-Analysis-with-R\\Salary_data.csv")
View(df)
df %>% ggplot() + geom_density(mapping = aes(x = education))
df %>% ggplot() + geom_histogram(mapping = aes (x = education))
df %>%  ggplot() + geom_boxplot(mapping = aes(y = education))
df %>% ggplot() + geom_density(mapping = aes(x = education,
color = gender))
df %>% ggplot() + geom_histogram(mapping = aes (x = education, color = gender))
df %>%  ggplot() + geom_boxplot(mapping = aes(y = education, color = gender))
df %>% ggplot() + geom_bar(mapping = aes(x = corporate, color = gender))
df %>%  ggplot() + geom_point(mapping = aes(x = education, y = salary, color = gender))
df %>%  ggplot() + geom_line(mapping = aes (x = education, y = salary, color = gender))
df %>%  ggplot() + geom_line(mapping = aes(x = education, y = salary, color = gender))
df %>%  ggplot() + geom_smooth(mapping = aes(x = education, y = salary, color = gender))
df %>%  ggplot() geom_density (mapping = aes (x = salary, color = gender))
df %>%  ggplot() + geom_density (mapping = aes (x = salary, color = gender))
df %>%  filter (salary> 50000) %>%  ggplot() + geom_density (mapping = aes (x = salary, color = gender))
df %>%  filter (salary > 50000) %>%  ggplot() + geom_boxplot(ma;;ing = aes (x = salary, y = gender))
df %>%  filter (salary > 50000) %>%  ggplot() + geom_boxplot(mapping = aes (x = salary, y = gender))
df %>%  ggplot() geom_bar (mapping = aes (x = corporate, fill = gender), position = 'dodge')
df %>%  ggplot() geom_bar (mapping = aes (x = corporate, fill = gender), position = 'dodge')
df %>%  ggplot() + geom_bar (mapping = aes (x = corporate, fill = gender), position = 'dodge')
df %>% ggplot() + geom_boxplot(mapping = aes(x = salary, y = corporate, color = gender))
df %>% ggplot() + geom_density(mapping = aes(x = education)
df %>% ggplot() + geom_density(mapping = aes(x = education)
df %>% ggplot() + geom_density(mapping = aes(x = education)
df %>% ggplot() + geom_density(mapping = aes(x = education)
df %>% ggplot() + geom_density(mapping = aes(x = education))
df %>% ggplot() + geom_histogram(mapping = aes (x = education))
df %>%  ggplot() + geom_boxplot(mapping = aes(y = education))
df %>% ggplot() + geom_bar(mapping = aes(x = corporate))
df %>%  ggplot() + geom_point(mapping = aes(x = education, y = salary))
df %>%  ggplot() + geom_line(mapping = aes (x = education, y = salary))
df %>%  ggplot() + geom_smooth(mapping = aes(x = education, y = salary))
df %>%  filter (salary> 50000) %>%  ggplot() + geom_density (mapping = aes (x = salary, color = gender))
df %>%  filter (salary > 50000) %>%  ggplot() + geom_boxplot(mapping = aes (x = salary, y = gender))
df %>%  ggplot() + geom_bar (mapping = aes (x = corporate, fill = gender), position = 'dodge')
df %>% ggplot() + geom_boxplot(mapping = aes(x = salary, y = corporate, color = gender))
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
library(tidyverse)
library(knitr)
library(ggplot2)
df <- read_csv("C:\\Users\\student\\Documents\\M461-Statistical-Analysis-with-R\\Salary_data.csv")
df %>%  ggplot() + geom_point(mapping = aes (x = education, y = salary)) + facet_wrap(~gender)
df %>%  ggplot() + geom_point(mapping = aes (x = education, y = salary)) + facet_wrap(~gender+corporate)
df %>% ggplot() + geom_bar(mapping = aes(x = corporate, fill = gender), position = 'dodge')
df %>% ggplot() + geom_bar(mapping = aes(x = corporate, fill = gender), position = 'fill')
df %>% group_by(gender) %>% summarise (average_salary = mean (salary, na.rm = TRUE)) %>% ggplot() %>% geom_col(mapping = aes (x = gender, y = average_salary))
df %>% summarise (average_salary = mean (salary, na.rm = TRUE)) %>% ggplot() %>% geom_col(mapping = aes (x = gender, y = average_salary))
df %>% group_by(experience) %>% summarise(average_salary = mean(salary, na.rm = TRUE))
df %>% group_by(experience) %>% summarise(average_salary = mean(salary, na.rm = TRUE)) %>% ggplot() + %>% geom_col(mapping = aes(x = experience, y = average_salary))
df %>% group_by(experience) %>% summarise(average_salary = mean(salary, na.rm = TRUE)) %>% ggplot + geom_col(mapping = aes(x = experience, y = average_salary))
df %>% group_by(experience) %>% summarise(average_salary = mean(salary, na.rm = TRUE)) %>% ggplot + geom_col(mapping = aes(x = experience, y = average_salary)) + theme_dark()
df %>%  filter (experience <=10) %>% ggplot() + geom_bar(mapping = aes(x = corporate, fill = gender), position = 'dodge')
df %>%
group_by(gender, experience) %>%
summarise(mean_loyalty = mean(loyalty, na.rm = TRUE)) %>%
ggplot() +
geom_col(aes(x = experience, y = mean_loyalty, fill = gender), position = 'dodge')
gg <- df %>%  ggplot() + geom_point(mapping = aes (x = education, y = salary)) + facet_wrap(~gender+corporate)
ggsave(filename = 'facets.png', plot = gg)
[Link to the plot](abc.png)
library(tidyverse)
df <- read_csv('https://bryantstats.github.io/math421/data/vaccinations-by-manufacturer.csv')
df %>%
filter(location=='United States') %>%
ggplot()+
geom_point(mapping = aes(x = date,
y = total_vaccinations,
color = vaccine))
View(df)
# the total vaccines (including all types of vaccines) by date
d1 <- df %>%
filter(location %in% c('United States', 'European Union')) %>%
group_by(date, location) %>%
summarise(total_vac2=sum(total_vaccinations, na.rm=TRUE))
# Plot
d1 %>%
ggplot()+
geom_point(mapping=aes(x=date,
y=total_vac2,
color=location))
df %>%
filter(location %in% c('United States', 'European Union')) %>%
group_by(date, location) %>%
summarise(total_vac2=sum(total_vaccinations, na.rm=TRUE)) %>%
ggplot()+
geom_point(mapping=aes(x=date,
y=total_vac2,
color=location))
d_df %>%
filter(location == 'Argentina') %>%
filter(date >= '20221-1-1')
d_Argentina <- df %>%
filter(location == 'Argentina') %>%
filter(date >= '2022-1-1')
group_by(date, location ) %>%
summarise(totalvac2 = sum(total_vaccinations, na.rm = TRUE))
d_Argentina <- df %>%
filter(location == 'Argentina') %>%
filter(date >= '2022-1-1')
group_by(date) %>%
summarise(totalvac2 = sum(total_vaccinations, na.rm = TRUE))
# the total vaccines (including all types of vaccines) by date
d1 <- df %>%
filter(location %in% c('United States', 'European Union')) %>%
group_by(date, location) %>%
summarise(total_vac2=sum(total_vaccinations, na.rm=TRUE))
# Plot
d1 %>%
ggplot()+
geom_point(mapping=aes(x=date,
y=total_vac2,
color=location))
d1 <- df %>%
filter(location %in% c('Argentina')) %>%
filter(year(date) == 2022) %>%
group_by(date, location) %>%
summarise(total_vac2=sum(total_vaccinations, na.rm=TRUE))
# Plot
d1 %>%
ggplot()+
geom_point(mapping=aes(x=date,
y=total_vac2,
color=location))
d1 <- df %>%
filter(location %in% c('Argentina')) %>%
filter(year(date) == 2022) %>%
group_by(date) %>%
summarise(total_vac2=sum(total_vaccinations, na.rm=TRUE))
# Plot
d1 %>%
ggplot()+
geom_point(mapping=aes(x=date,
y=total_vac2,
color=location))
d1 <- df %>%
filter(location %in% c('Argentina')) %>%
filter(year(date) == 2022) %>%
group_by(date, location) %>%
summarise(total_vac2=sum(total_vaccinations, na.rm=TRUE))
# Plot
d1 %>%
ggplot()+
geom_point(mapping=aes(x=date,
y=total_vac2,
color=location))
d1 <- df %>%
filter(location %in% c('Argentina')) %>%
filter(year(date) == 2022) %>%
group_by(date, location) %>%
summarise(total_vac2=sum(total_vaccinations, na.rm=TRUE))
# Plot
d1 %>%
ggplot()+
geom_line(mapping=aes(x=date,
y=total_vac2,
color=location))
df %>%
group_by(date, location) %>%
summarise(total_vac2=sum(total_vaccinations, na.rm=TRUE)) %>%
ggplot()+
geom_point(mapping=aes(x=date,
y=total_vac2,
color=location))
install.packages('countrycode')
library(countrycode)
df %>%
filter(countrycode(location, "country.name", "continent") == "Asia")
group_by(date, location) %>%
summarise(total_vac2=sum(total_vaccinations, na.rm=TRUE)) %>%
ggplot()+
geom_point(mapping=aes(x=date,
y=total_vac2,
color=location))
library(countrycode)
df %>%
filter(countrycode(location, "country.name", "continent") == "Asia")
group_by(date, location) %>%
summarise(total_vac2=sum(total_vaccinations, na.rm=TRUE)) %>%
ggplot()+
geom_point(mapping=aes(x=date,
y=total_vac2,
color=location))
library(countrycode)
df %>%
filter(countrycode(location, "country.name", "continent") == "Asia")
group_by(date) %>%
summarise(total_vac2=sum(total_vaccinations, na.rm=TRUE)) %>%
ggplot()+
geom_point(mapping=aes(x=date,
y=total_vac2,
color=location))
library(countrycode)
df %>%
filter(countrycode(location, "country.name", "continent") == "Asia")
group_by(location) %>%
summarise(total_vac2=sum(total_vaccinations, na.rm=TRUE)) %>%
ggplot()+
geom_point(mapping=aes(x=date,
y=total_vac2,
color=location))
library(countrycode)
df %>%
filter(countrycode(location, "country.name", "continent") == "Asia")
summarise(total_vac2=sum(total_vaccinations, na.rm=TRUE)) %>%
ggplot()+
geom_point(mapping=aes(x=date,
y=total_vac2,
color=location))
library(countrycode)
df %>%
filter(countrycode(location, "country.name", "continent") == "Asia") %>%
summarise(total_vac2=sum(total_vaccinations, na.rm=TRUE)) %>%
ggplot()+
geom_point(mapping=aes(x=date,
y=total_vac2,
color=location))
df %>%
filter(countrycode(location, "country.name", "continent") == "Asia")
library(countrycode)
df %>%
filter(countrycode(location,
"country.name",
"continent") == "Asia") %>%
group_by(date, location) %>%
summarise(total_vac2=sum(total_vaccinations, na.rm=TRUE)) %>%
ggplot()+
geom_point(mapping=aes(x=date,
y=total_vac2,
color=location))
df %>%
filter(countrycode(location,
"country.name",
"continent") == "South America") %>%
filter(year(date == 2021)) %>%
group_by(date, location) %>%
summarise(total_vac2=sum(total_vaccinations, na.rm=TRUE)) %>%
ggplot()+
geom_point(mapping=aes(x=date,
y=total_vac2,
color=location))
df %>%
filter(countrycode(location,
"country.name",
"continent") == "South America") %>%
filter(year(date) == 2021) %>%
group_by(date, location) %>%
summarise(total_vac2=sum(total_vaccinations, na.rm=TRUE)) %>%
ggplot()+
geom_point(mapping=aes(x=date,
y=total_vac2,
color=location))
df %>%
filter(countrycode(location,
"country.name",
"continent") == "South America")
country_list <- unique(df$location)
country_list
country_list <- df %>% filter(countrycode(location, "country.name", "contient") == "South America") %>% unique(df$location)
country_list <- unique(df$location)
country_list
df %>%
filter(location %in% c('Argentina', 'Uruguay', 'Ecuador', 'Chile', 'Peru')) %>%
filter(year(date) == 2021) %>%
group_by(date, location) %>%
summarise(total_vac2=sum(total_vaccinations, na.rm=TRUE)) %>%
ggplot()+
geom_point(mapping=aes(x=date,
y=total_vac2,
color=location))
